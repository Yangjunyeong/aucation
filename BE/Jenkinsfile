pipeline {
    agent any


    stages {

               
    stage('Build Docker-Compose') {
                    steps {
	           sh 'docker compose -f /var/jenkins_home/workspace/aucation-back/docker-compose.yml build server'
                    }
                }
stage('Docker stop and rm') {
    steps {
        script {
            def containerExists = sh(script: 'docker ps -aq --filter "name=auc-back*"', returnStatus: true)
            
            if (containerExists == 0) {
                echo "Stopping and removing auc-back container"
                sh 'docker stop auc-back'
                sh 'docker rm auc-back'
            } else {
                echo "auc-back container does not exist, nothing to stop or remove."
            }
        }
    }
    post {
        failure {
            sh 'echo "Docker Fail"'
        }
    }
}

 	stage('Up Docker-Compose') {
                    steps {
	           sh 'docker compose -f /var/jenkins_home/workspace/aucation-back/docker-compose.yml up server -d'
                    }
                }

    
     stage('RM Docker'){
            steps {
                sh 'echo "Clonning Repository"'
                git branch: 'back',
                    url: 'https://lab.ssafy.com/s09-final/S09P31B104.git',
                    credentialsId: '10191'
            }
            post {
                success {
                     sh 'echo "Successfully Cloned Repository MyNameis"'
                 }
                 failure {
                     sh 'echo "Fail Cloned Repository"'
                 }
            }
        }

        
        stage('Build Docker-Compose') {
                    steps {
	           sh 'docker compose -f /jenkins/workspace/back/docker-compose.yml build'
                    }
                }
 	stage('Up Docker-Compose') {
                    steps {
	           sh 'docker compose -f /jenkins/workspace/back/docker-compose.yml up -d'
                    }
                }
    }
}
